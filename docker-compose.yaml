version: '3.9'


services:
  db:
    image: postgres:15
    container_name: db
    restart: on-failure
    env_file:
      - ./api/.env
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - app_network
    
  api:
      container_name: api
      build:
        context: ./api
        dockerfile: Dockerfile
      restart: always
      env_file:
        - ./api/.env
      environment:
        ENV: docker
        DB_URL: postgresql+asyncpg://dino:tec-bloc12345!@db:5432/tec_bloc
      command: >
        bash -c "uvicorn main:app --host=0.0.0.0 --port=8000 --workers=4"
      depends_on:
        - db
      ports:
        - "8000:8000"
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck"]
        interval: 30s
        timeout: 5s
        retries: 5
        start_period: 20s
      volumes:
        - ./api:/app
      networks:
        - app_network
      
  frontend:
      build:
        context: ./dashboard
        dockerfile: Dockerfile
      ports:
        - "5050:80"
      depends_on:
        - api
      networks:
        - app_network

  nginx:
      image: nginx:latest
      container_name: nginx_proxy
      ports:
        - "80:80"
      volumes:
        - ./nginx.conf:/etc/nginx/conf.d/default.conf
      depends_on:
        - api
        - frontend
      networks:
        - app_network


volumes:
  data:
    external: true
    name: tec-bloc_tec-bloc_data

networks:
  app_network:
    driver: bridge
