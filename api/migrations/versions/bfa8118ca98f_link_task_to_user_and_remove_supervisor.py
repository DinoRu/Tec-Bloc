"""Link Task to User and remove supervisor

Revision ID: bfa8118ca98f
Revises: 4f4d720f518c
Create Date: 2025-06-11 16:26:57.037495

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import table, String, update
from sqlmodel import Session, select

# revision identifiers, used by Alembic.
revision: str = 'bfa8118ca98f'
down_revision: Union[str, None] = '4f4d720f518c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('worker_id', sa.Uuid(), nullable=True))
    op.create_foreign_key(None, 'tasks', 'users', ['worker_id'], ['uid'])

    tasks = table("tasks", sa.Column("supervisor", sa.VARCHAR), sa.Column("worker_id", sa.UUID))
    users = table("users", sa.Column("username", sa.VARCHAR), sa.Column("uid", sa.UUID))

    bind = op.get_bind()
    session = Session(bind=bind)

    result = bind.execute(select(users.c.username, users.c.uid))
    user_map = dict(result.fetchall())

    for username, uid in user_map.items():
        bind.execute(
            update(tasks)
            .where(tasks.c.supervisor == username)
            .values(worker_id=uid)
        )
    op.alter_column('tasks', 'worker_id', nullable=False)
    op.drop_column('tasks', 'supervisor')
    # ### end Alembic commands ###



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'worker_id')
    # ### end Alembic commands ###
