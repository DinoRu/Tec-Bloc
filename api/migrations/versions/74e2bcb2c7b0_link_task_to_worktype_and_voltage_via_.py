"""Link Task to WorkType and Voltage via UUID

Revision ID: 74e2bcb2c7b0
Revises: 9c8925867860
Create Date: 2025-06-11 16:05:34.945229

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text

# revision identifiers, used by Alembic.
revision: str = '74e2bcb2c7b0'
down_revision: Union[str, None] = '9c8925867860'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Ajout des colonnes UUID
    op.add_column('tasks', sa.Column('work_type_id', sa.Uuid(), nullable=True))
    op.add_column('tasks', sa.Column('voltage_id', sa.Uuid(), nullable=True))

    # CrÃ©ation des FK (aprÃ¨s mise Ã  jour ci-dessous)
    op.create_foreign_key(None, 'tasks', 'voltages', ['voltage_id'], ['uid'])
    op.create_foreign_key(None, 'tasks', 'work_types', ['work_type_id'], ['uid'])

    # ðŸ§  Mise Ã  jour des colonnes UUID en se basant sur les anciennes valeurs
    op.execute(text("""
           UPDATE tasks
           SET work_type_id = wt.uid
           FROM work_types wt
           WHERE tasks.work_type = wt.title
       """))

    op.execute(text("""
           UPDATE tasks
           SET voltage_id = v.uid
           FROM voltages v
           WHERE tasks.voltage = v.volt
       """))

    # Suppression des anciennes colonnes
    op.drop_constraint('tasks_work_type_fkey', 'tasks', type_='foreignkey')
    op.drop_constraint('tasks_voltage_fkey', 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'work_type')
    op.drop_column('tasks', 'voltage')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('voltage', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('work_type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.create_foreign_key('tasks_voltage_fkey', 'tasks', 'voltages', ['voltage'], ['volt'])
    op.create_foreign_key('tasks_work_type_fkey', 'tasks', 'work_types', ['work_type'], ['title'])
    op.drop_column('tasks', 'voltage_id')
    op.drop_column('tasks', 'work_type_id')
    # ### end Alembic commands ###
